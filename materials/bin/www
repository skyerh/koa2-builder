/**
 * Module dependencies.
 */
const
  Arena = require('bull-arena'),
  http = require('http'),
  app = require('../app.js'),
  config = require('../config'),
  setEvents = require('../events')

/**
 * Normalize a port into a number, string, or false.
 */
const normalizePort = (val) => {
  const nPort = parseInt(val, 10)

  if (Number.isNaN(nPort)) {
    return val
  }
  if (nPort >= 0) {
    return nPort
  }
  return false
}

/**
 * Get port from environment and store in Express.
 */
const port = normalizePort(config.server.port || '3000')

/**
 * Create HTTP server.
 */
const server = http.createServer(app.callback())

/**
 * setup Socket.IO
 */
const io = require('socket.io')(server)

setEvents.socketIoEvent(io)

/**
 * Listen on provided port, on all network interfaces.
 */
server.listen(port, '0.0.0.0')
setEvents.serverEvent(server, port)

try {
  Arena({
    queues: config.worker.arena.queues,
  }, config.worker.arena.address)
} catch (err) {
  console.log('Arena is already running...')
}
